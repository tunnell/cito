#!/usr/bin/env python
"""Start event builder and trigger software for continuous processing..

Process data through the event builder and software trigger. The default
behavior of this command is to take data from the input database, process
it, then write events out to the output database.  (This command does not
build files.)
"""
# __author__ = 'tunnell'

import logging
import time

from configglue import schema
from configglue.glue import configglue

from wax import Configuration
from wax.EventBuilder import Processor


def main(chunksize,
         padding,
         threshold,
         hostname,
         celery,
         **kwargs):

    processing_class = Processor.SingleThreaded
    if celery:
        processing_class = Processor.Celery

    processing_class(chunksize=chunksize,
                     padding=padding,
                     threshold=threshold,
                     run_hostname=hostname)

if __name__ == '__main__':


    class eb(schema.Schema, Configuration.EventBuilder, Configuration.Mongo):
        pass

    glue = configglue(eb, ['config.ini'])

    values = glue.schema_parser.values('__main__')

    if values.get('profile'):
        import time
        start_time = time.time()
        print("warning: we are profiling, so runs slow")
        import cProfile
        something = []
        for key, value in dict(values).items():
            if isinstance(value, str):
                something.append('%s="%s"' % (key, value))
            else:
                something.append('%s=%s' % (key, str(value)))

        something = ",".join(something)
        print('something', something)
        cProfile.runctx("""main(%s)""" % something, locals(), globals(),
                        filename='wax.profile')
        print("Total time:", time.time() - start_time)
    else:
        print('Arguments:', dict(values))
        main(**dict(values))
